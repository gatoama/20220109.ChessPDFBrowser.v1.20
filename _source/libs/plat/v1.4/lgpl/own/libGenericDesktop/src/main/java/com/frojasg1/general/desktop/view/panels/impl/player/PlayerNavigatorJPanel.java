/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.frojasg1.general.desktop.view.panels.impl.player;

import com.frojasg1.general.desktop.view.icons.IconResources;
import com.frojasg1.general.desktop.view.panels.evt.BaseJPanelOfEvents;
import com.frojasg1.general.desktop.view.panels.evt.map.ButtonEventEntryMultiMap;
import com.frojasg1.general.desktop.view.zoom.mapper.ComponentMapper;
import com.frojasg1.general.desktop.view.zoom.mapper.ComposedComponent;
import java.awt.event.ActionEvent;
import java.util.Objects;
import javax.swing.JPanel;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author Francisco Javier Rojas Garrido <frojasg1@hotmail.com>
 */
public class PlayerNavigatorJPanel
	extends BaseJPanelOfEvents<PlayerNavigatorEventType, PlayerNavigatorEvent>
	implements ComposedComponent
{
	private static final Logger LOGGER = LoggerFactory.getLogger(PlayerNavigatorJPanel.class);

	protected boolean _isIndependent;

	/**
	 * Creates new form PlayerNavigatorJPanel
	 */
	public PlayerNavigatorJPanel() {
		this(true);
	}

	/**
	 * Creates new form PlayerNavigatorJPanel
	 */
	public PlayerNavigatorJPanel( boolean isIndependent ) {
		super( PlayerNavigatorEventType.class );
		_isIndependent = isIndependent;
	}

	public void init()
	{
		super.init();
	}

	@Override
	protected void initComponentsChild() {
		initComponents();
	}

	public boolean isIndependent() {
		return _isIndependent;
	}



	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jB_stop = new javax.swing.JButton();
        jB_previous = new javax.swing.JButton();
        jB_next = new javax.swing.JButton();
        jB_playPause = new javax.swing.JButton();

        setLayout(null);

        jPanel1.setLayout(null);

        jB_stop.setMaximumSize(new java.awt.Dimension(20, 20));
        jB_stop.setMinimumSize(new java.awt.Dimension(20, 20));
        jB_stop.setName("name=jB_stop,icon=com/frojasg1/generic/resources/othericons/stop.png"); // NOI18N
        jB_stop.setPreferredSize(new java.awt.Dimension(20, 20));
        jPanel1.add(jB_stop);
        jB_stop.setBounds(55, 5, 20, 20);

        jB_previous.setMaximumSize(new java.awt.Dimension(20, 20));
        jB_previous.setMinimumSize(new java.awt.Dimension(20, 20));
        jB_previous.setName("name=jB_previous,icon=com/frojasg1/generic/resources/navigator/version2/controls.start.png"); // NOI18N
        jB_previous.setPreferredSize(new java.awt.Dimension(20, 20));
        jPanel1.add(jB_previous);
        jB_previous.setBounds(5, 5, 20, 20);

        jB_next.setMaximumSize(new java.awt.Dimension(20, 20));
        jB_next.setMinimumSize(new java.awt.Dimension(20, 20));
        jB_next.setName("name=jB_next,icon=com/frojasg1/generic/resources/navigator/version2/controls.end.png"); // NOI18N
        jB_next.setPreferredSize(new java.awt.Dimension(20, 20));
        jPanel1.add(jB_next);
        jB_next.setBounds(80, 5, 20, 20);

        jB_playPause.setMaximumSize(new java.awt.Dimension(20, 20));
        jB_playPause.setMinimumSize(new java.awt.Dimension(20, 20));
        jB_playPause.setName("name=jB_playPause,icon=com/frojasg1/generic/resources/othericons/play.png"); // NOI18N
        jB_playPause.setPreferredSize(new java.awt.Dimension(20, 20));
        jPanel1.add(jB_playPause);
        jB_playPause.setBounds(30, 5, 20, 20);

        add(jPanel1);
        jPanel1.setBounds(-1, 0, 105, 30);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_next;
    private javax.swing.JButton jB_playPause;
    private javax.swing.JButton jB_previous;
    private javax.swing.JButton jB_stop;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

	@Override
	protected JPanel getParentPanel()
	{
		return( jPanel1 );
	}

	@Override
	protected PlayerNavigatorEvent createEvent( PlayerNavigatorEventType type )
	{
		return( new PlayerNavigatorEvent( type ) );
	}

	public void callAfterPlayPressed()
	{
		setNewImageResource( getButton(PlayerNavigatorEventType.PLAY), IconResources.PAUSE_ICON_RESOURCE );
		disableAllAssociated( PlayerNavigatorEventType.PLAY );
		enableAllAssociated( PlayerNavigatorEventType.PAUSE );
	}

	public void callAfterPausePressed()
	{
		setNewImageResource( getButton(PlayerNavigatorEventType.PAUSE), IconResources.PLAY_ICON_RESOURCE );
		disableAllAssociated( PlayerNavigatorEventType.PAUSE );
		enableAllAssociated( PlayerNavigatorEventType.PLAY );
	}

	@Override
	protected void actionPerformed( ActionEvent evt )
	{
		super.actionPerformed(evt);

		Object button = evt.getSource();
		String imageResourceName = getImageResourceName( button );

		if( isIndependent() )
		{
			if( Objects.equals( imageResourceName, IconResources.PLAY_ICON_RESOURCE ) )
				callAfterPlayPressed();
			else if( Objects.equals( imageResourceName, IconResources.PAUSE_ICON_RESOURCE ) )
				callAfterPausePressed();
			else if( Objects.equals( imageResourceName, IconResources.STOP_ICON_RESOURCE ) )
				callAfterPausePressed();
		}
	}

	@Override
	protected void fillMultiMap( ButtonEventEntryMultiMap<PlayerNavigatorEventType> result )
	{
		result.put( IconResources.START_ICON_RESOURCE, PlayerNavigatorEventType.PREVIOUS, jB_previous);
		result.put( IconResources.STOP_ICON_RESOURCE, PlayerNavigatorEventType.STOP, jB_stop);
		result.put( IconResources.END_ICON_RESOURCE, PlayerNavigatorEventType.NEXT, jB_next);
		result.put( IconResources.PLAY_ICON_RESOURCE, PlayerNavigatorEventType.PLAY, jB_playPause);
		result.put( IconResources.PAUSE_ICON_RESOURCE, PlayerNavigatorEventType.PAUSE, jB_playPause);
	}

	@Override
	public void setComponentMapper(ComponentMapper compMapper)
	{
		jB_next = compMapper.mapComponent( jB_next );
		jB_playPause = compMapper.mapComponent( jB_playPause );
		jB_previous = compMapper.mapComponent( jB_previous );
		jB_stop = compMapper.mapComponent( jB_stop );
		jPanel1 = compMapper.mapComponent( jPanel1 );

		super.setComponentMapper(compMapper);
	}
}
