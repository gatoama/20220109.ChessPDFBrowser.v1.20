/* 
 * Copyright (C) 2021 Francisco Javier Rojas Garrido <frojasg1@hotmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You may obtain a copy of the License at
 *
 *      http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 */
package com.frojasg1.general.desktop.view.panels;

import com.frojasg1.general.desktop.view.ViewFunctions;
import com.frojasg1.general.desktop.view.zoom.mapper.ComponentMapper;
import com.frojasg1.general.desktop.view.zoom.mapper.InternallyMappedComponent;
import java.awt.Insets;

/**
 *
 * @author Usuario
 */
public class NavigatorJPanel extends com.frojasg1.general.desktop.view.panels.CustomJPanelBase implements InformerInterface, InternallyMappedComponent
{
	protected static final String _resourcePath = "com/frojasg1/generic/resources/navigator/version2";

	protected NavigatorControllerInterface _controller = null;

	/**
	 * Creates new form NavigatorJPanel
	 */
	public NavigatorJPanel( NavigatorControllerInterface controller )
	{
		super.init();


		_controller = controller;
		initComponents();
//		initNavigatorButtons();
		setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
	}

	protected String getResourceName( String shortResourceName )
	{
		return( _resourcePath + "/" + shortResourceName );
	}
/*
	protected void initNavigatorButtons()
	{
		Insets insets = new Insets( 4, 4, 2, 2 );
		ViewFunctions.instance().addImageToButton( jBBack, getResourceName( "controls.back.png" ), insets );
		ViewFunctions.instance().addImageToButton( jBEnd, getResourceName( "controls.end.png" ), insets );
		ViewFunctions.instance().addImageToButton( jBForward, getResourceName( "controls.forward.png" ), insets );
		ViewFunctions.instance().addImageToButton( jBStart, getResourceName( "controls.start.png" ), insets );
	}
*/
	public void setNameForStartButton( String name )
	{
		jBStart.setName(name);
	}
	
	public void setNameForEndButton( String name )
	{
		jBEnd.setName(name);
	}
	
	public void setNameForForwardButton( String name )
	{
		jBForward.setName(name);
	}

	public void setNameForBackButton( String name )
	{
		jBBack.setName(name);
	}

	public void setStartButtonEnabled( boolean value )
	{
		jBStart.setEnabled( value );
	}
	
	public void setEndButtonEnabled( boolean value )
	{
		jBEnd.setEnabled( value );
	}
	
	public void setForwardButtonEnabled( boolean value )
	{
		jBForward.setEnabled( value );
	}
	
	public void setBackButtonEnabled( boolean value )
	{
		jBBack.setEnabled( value );
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBStart = new javax.swing.JButton();
        jBBack = new javax.swing.JButton();
        jBForward = new javax.swing.JButton();
        jBEnd = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(220, 50));
        setPreferredSize(new java.awt.Dimension(220, 50));
        setLayout(null);

        jBStart.setName("name=jBStart,icon=com/frojasg1/generic/resources/navigator/version2/controls.start.png"); // NOI18N
        jBStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBStartActionPerformed(evt);
            }
        });
        add(jBStart);
        jBStart.setBounds(20, 10, 40, 30);

        jBBack.setName("name=jBBack,icon=com/frojasg1/generic/resources/navigator/version2/controls.back.png"); // NOI18N
        jBBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBackActionPerformed(evt);
            }
        });
        add(jBBack);
        jBBack.setBounds(60, 10, 40, 30);

        jBForward.setName("name=jBForward,icon=com/frojasg1/generic/resources/navigator/version2/controls.forward.png"); // NOI18N
        jBForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBForwardActionPerformed(evt);
            }
        });
        add(jBForward);
        jBForward.setBounds(100, 10, 40, 30);

        jBEnd.setName("name=jBEnd,icon=com/frojasg1/generic/resources/navigator/version2/controls.end.png"); // NOI18N
        jBEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEndActionPerformed(evt);
            }
        });
        add(jBEnd);
        jBEnd.setBounds(140, 10, 40, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void jBStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBStartActionPerformed
        // TODO add your handling code here:

		if( _controller != null )
		{
			try
			{
				_controller.navigator_start( this );
			}
			catch( Throwable th )
			{
				th.printStackTrace();
			}
		}
    }//GEN-LAST:event_jBStartActionPerformed

    private void jBBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBackActionPerformed
        // TODO add your handling code here:

		if( _controller != null )
		{
			try
			{
				_controller.navigator_previous( this );
			}
			catch( Throwable th )
			{
				th.printStackTrace();
			}
		}
    }//GEN-LAST:event_jBBackActionPerformed

    private void jBForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBForwardActionPerformed
        // TODO add your handling code here:

		if( _controller != null )
		{
			try
			{
				_controller.navigator_next( this );
			}
			catch( Throwable th )
			{
				th.printStackTrace();
			}
		}
    }//GEN-LAST:event_jBForwardActionPerformed

    private void jBEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEndActionPerformed
        // TODO add your handling code here:

		if( _controller != null )
		{
			try
			{
				_controller.navigator_end( this );
			}
			catch( Throwable th )
			{
				th.printStackTrace();
			}
		}
    }//GEN-LAST:event_jBEndActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBack;
    private javax.swing.JButton jBEnd;
    private javax.swing.JButton jBForward;
    private javax.swing.JButton jBStart;
    // End of variables declaration//GEN-END:variables

	@Override
	public void setComponentMapper(ComponentMapper mapper) {
		jBBack = mapper.mapComponent(jBBack);
		jBEnd = mapper.mapComponent(jBEnd);
		jBForward = mapper.mapComponent(jBForward);
		jBStart = mapper.mapComponent(jBStart);

		super.setComponentMapper(mapper);
	}
}
