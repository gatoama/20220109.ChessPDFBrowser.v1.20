/* 
 * Copyright (C) 2021 Francisco Javier Rojas Garrido <frojasg1@hotmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You may obtain a copy of the License at
 *
 *      http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 */
package com.frojasg1.chesspdfbrowser.enginewrapper.view.configuration.items.impl;

import com.frojasg1.chesspdfbrowser.enginewrapper.configuration.items.impl.ComboConfigurationItem;
import com.frojasg1.chesspdfbrowser.enginewrapper.view.configuration.items.ConfigurationItemJPanelBase;
import com.frojasg1.general.desktop.view.combobox.utils.ComboBoxFunctions;
import com.frojasg1.general.desktop.view.zoom.mapper.ComponentMapper;
import java.util.Collection;
import javax.swing.JPanel;

/**
 *
 * @author Francisco Javier Rojas Garrido <frojasg1@hotmail.com>
 */
public class ComboConfigurationItemJPanel
	extends ConfigurationItemJPanelBase<String, ComboConfigurationItem> {

	protected ComboConfigurationItem _configurationItem = null;

	/**
	 * Creates new form ButtonConfigurationItemJPanel
	 */
	public ComboConfigurationItemJPanel() {
	}

	@Override
	public void init( ComboConfigurationItem bci )
	{
		_configurationItem = bci;

		super.init();
	}

	protected void initContents()
	{
		if( _configurationItem != null )
		{
			jL_name.setText( _configurationItem.getName() );

			fillInCombobox();
		}
	}

	protected void fillInCombobox()
	{
		Collection<String> col = _configurationItem.getAllowedValues();
		ComboBoxFunctions.instance().fillComboBox(jCB_value,
				col.toArray( new String[col.size()] ),
				_configurationItem.getValueWithDefaultValue() );
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jL_name = new javax.swing.JLabel();
        jCB_value = new javax.swing.JComboBox<>();

        setLayout(null);

        jPanel1.setLayout(null);

        jL_name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jL_name.setText("Name :");
        jPanel1.add(jL_name);
        jL_name.setBounds(5, 15, 205, 14);

        jCB_value.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(jCB_value);
        jCB_value.setBounds(215, 10, 175, 20);

        add(jPanel1);
        jPanel1.setBounds(0, 0, 505, 45);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jCB_value;
    private javax.swing.JLabel jL_name;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

	@Override
	public String getValue()
	{
		return( (String) jCB_value.getSelectedItem() );
	}

	@Override
	public void setValue( String value )
	{
		jCB_value.setSelectedItem( value );
	}

	@Override
	public void setComponentMapper(ComponentMapper compMapper) {
		jCB_value = compMapper.mapComponent( jCB_value );
		jL_name = compMapper.mapComponent( jL_name );
		jPanel1 = compMapper.mapComponent( jPanel1 );
	}

	@Override
	protected void initComponents_protected() {
		initComponents();
	}

	@Override
	protected JPanel getParentPanel()
	{
		return( jPanel1 );
	}

	@Override
	public Class<String> getValueClass()
	{
		return( String.class );
	}

	@Override
	public void releaseResources()
	{
		_configurationItem = null;
	}
}
