/* 
 * Copyright (C) 2021 Francisco Javier Rojas Garrido <frojasg1@hotmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You may obtain a copy of the License at
 *
 *      http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 */
package com.frojasg1.chesspdfbrowser.enginewrapper.view.configuration.items.impl;

import com.frojasg1.chesspdfbrowser.enginewrapper.configuration.items.impl.ButtonConfigurationItem;
import com.frojasg1.chesspdfbrowser.enginewrapper.view.configuration.items.ConfigurationItemJPanelBase;
import com.frojasg1.general.desktop.view.zoom.mapper.ComponentMapper;
import javax.swing.JPanel;

/**
 *
 * @author Francisco Javier Rojas Garrido <frojasg1@hotmail.com>
 */
public class ButtonConfigurationItemJPanel
	extends ConfigurationItemJPanelBase<Object, ButtonConfigurationItem>
{

	protected ButtonConfigurationItem _configurationItem = null;

	protected Runnable _executor = null;

	/**
	 * Creates new form ButtonConfigurationItemJPanel
	 */
	public ButtonConfigurationItemJPanel() {
	}

	@Override
	public void init( ButtonConfigurationItem bci )
	{
		_configurationItem = bci;

		super.init();
	}

	public void setExecutor( Runnable executor )
	{
		_executor = executor;
	}

	@Override
	protected void initContents()
	{
		if( _configurationItem != null )
			jL_name.setText( _configurationItem.getName() );
	}


	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jB_execute = new javax.swing.JButton();
        jL_name = new javax.swing.JLabel();

        setLayout(null);

        jPanel1.setLayout(null);

        jB_execute.setText("Execute");
        jB_execute.setName("jB_execute"); // NOI18N
        jB_execute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_executeActionPerformed(evt);
            }
        });
        jPanel1.add(jB_execute);
        jB_execute.setBounds(215, 10, 71, 23);

        jL_name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jL_name.setText("Name :");
        jPanel1.add(jL_name);
        jL_name.setBounds(5, 15, 205, 14);

        add(jPanel1);
        jPanel1.setBounds(0, 0, 465, 45);
    }// </editor-fold>//GEN-END:initComponents

    private void jB_executeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_executeActionPerformed
        // TODO add your handling code here:

		if( _executor != null )
			_executor.run();

    }//GEN-LAST:event_jB_executeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_execute;
    private javax.swing.JLabel jL_name;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

	@Override
	public Object getValue()
	{
		return( null );
	}

	@Override
	public void setValue( Object value )
	{
	}

	@Override
	public void setComponentMapper(ComponentMapper compMapper) {
		jB_execute = compMapper.mapComponent( jB_execute );
		jL_name = compMapper.mapComponent( jL_name );
		jPanel1 = compMapper.mapComponent( jPanel1 );
	}

	@Override
	protected void initComponents_protected() {
		initComponents();
	}

	@Override
	protected JPanel getParentPanel()
	{
		return( jPanel1 );
	}

	@Override
	public Class<Object> getValueClass()
	{
		return( Object.class );
	}

	@Override
	public void releaseResources()
	{
		_configurationItem = null;
	}
}
